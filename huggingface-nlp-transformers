{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"from transformers import pipeline\n\n# sentiment-analysis\nclassifier = pipeline(\"sentiment-analysis\")\nclassifier(\"I've been waiting for a HuggingFace course my whole life.\")","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-09T13:55:31.754436Z","iopub.execute_input":"2024-07-09T13:55:31.754933Z","iopub.status.idle":"2024-07-09T13:56:00.135004Z","shell.execute_reply.started":"2024-07-09T13:55:31.754899Z","shell.execute_reply":"2024-07-09T13:56:00.133756Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stderr","text":"2024-07-09 13:55:37.927283: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-07-09 13:55:37.927458: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-07-09 13:55:38.161206: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\nNo model was supplied, defaulted to distilbert/distilbert-base-uncased-finetuned-sst-2-english and revision af0f99b (https://huggingface.co/distilbert/distilbert-base-uncased-finetuned-sst-2-english).\nUsing a pipeline without specifying a model name and revision in production is not recommended.\n/opt/conda/lib/python3.10/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.\n  warnings.warn(\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/629 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"43feb97406a047e3b069b0b2180218aa"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/268M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"322bebbb80f042c9a79258bbebbfd513"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/48.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0efb737785fe49f399c5aa2791cc041d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"fffe5bdef331404c9076e422c17e60c7"}},"metadata":{}},{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"[{'label': 'POSITIVE', 'score': 0.9598049521446228}]"},"metadata":{}}]},{"cell_type":"code","source":"classifier([\"I've been waiting for a HuggingFace course my whole life.\", \"I hat this so much!\"])","metadata":{"execution":{"iopub.status.busy":"2024-07-09T13:56:52.827616Z","iopub.execute_input":"2024-07-09T13:56:52.828627Z","iopub.status.idle":"2024-07-09T13:56:52.905423Z","shell.execute_reply.started":"2024-07-09T13:56:52.828584Z","shell.execute_reply":"2024-07-09T13:56:52.904220Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"[{'label': 'POSITIVE', 'score': 0.9598049521446228},\n {'label': 'POSITIVE', 'score': 0.999339759349823}]"},"metadata":{}}]},{"cell_type":"code","source":"# zero-shot-classification\nclassifier2 = pipeline(\"zero-shot-classification\")\nclassifier2(\"This is a course about the Transformers library\",\n           candidate_labels=[\"education\", \"politics\", \"business\"])","metadata":{"execution":{"iopub.status.busy":"2024-07-09T13:59:06.166498Z","iopub.execute_input":"2024-07-09T13:59:06.168475Z","iopub.status.idle":"2024-07-09T13:59:17.983261Z","shell.execute_reply.started":"2024-07-09T13:59:06.168423Z","shell.execute_reply":"2024-07-09T13:59:17.981743Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stderr","text":"No model was supplied, defaulted to facebook/bart-large-mnli and revision c626438 (https://huggingface.co/facebook/bart-large-mnli).\nUsing a pipeline without specifying a model name and revision in production is not recommended.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/1.15k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"188d14dc451741a9b7fa11173cef664e"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/1.63G [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"39892fed58134a08bce1d6ead0c371dd"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/26.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"bcc2596a904a49999ebfdca712a081a6"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.json:   0%|          | 0.00/899k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"91b823fb434a46e786a4b12f7283d3bb"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"merges.txt:   0%|          | 0.00/456k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d4ac64cc210748a4b818b79d5442c4f0"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/1.36M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f5ed7a4b58d2447bbfaae94416e6c428"}},"metadata":{}},{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"{'sequence': 'This is a course about the Transformers library',\n 'labels': ['education', 'business', 'politics'],\n 'scores': [0.8445987105369568, 0.1119743064045906, 0.04342692345380783]}"},"metadata":{}}]},{"cell_type":"code","source":"# text-generation\ngenerator = pipeline(\"text-generation\")\ngenerator(\"In this course, we will teach you how to\")","metadata":{"execution":{"iopub.status.busy":"2024-07-09T14:02:19.384912Z","iopub.execute_input":"2024-07-09T14:02:19.385658Z","iopub.status.idle":"2024-07-09T14:02:26.656579Z","shell.execute_reply.started":"2024-07-09T14:02:19.385614Z","shell.execute_reply":"2024-07-09T14:02:26.654748Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stderr","text":"No model was supplied, defaulted to openai-community/gpt2 and revision 6c0e608 (https://huggingface.co/openai-community/gpt2).\nUsing a pipeline without specifying a model name and revision in production is not recommended.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/665 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0532e02d2bcf482a9c7b621accfb180e"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/548M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c34b699a46024e87bca115b004076d7e"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"generation_config.json:   0%|          | 0.00/124 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ad159a03b0b2410d9ad0218a742d108b"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/26.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8d7d5bbb580546bbb0045f6bc79269b3"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.json:   0%|          | 0.00/1.04M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e2421329710d4fcfab0c7305976e0d74"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"merges.txt:   0%|          | 0.00/456k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"3492dfe635d64e448b441a7c21bc27e6"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/1.36M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"150dfe04b9ff49609c5b98531b2cd16b"}},"metadata":{}},{"name":"stderr","text":"Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.\n","output_type":"stream"},{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"[{'generated_text': 'In this course, we will teach you how to work with a different type of robot in a unique way to create a variety of customized projects and scenarios, and have a series of demos with a wide variety of robots being built. We will also provide'}]"},"metadata":{}}]},{"cell_type":"code","source":"# Using any model from the Hub in a pipeline\ngenerator2 = pipeline(\"text-generation\", model=\"distilgpt2\")\ngenerator2(\"In this course, we will teach you how to\",\n          max_length=30,\n          num_return_sequences=2,\n          )","metadata":{"execution":{"iopub.status.busy":"2024-07-09T14:04:51.946792Z","iopub.execute_input":"2024-07-09T14:04:51.947398Z","iopub.status.idle":"2024-07-09T14:04:57.375729Z","shell.execute_reply.started":"2024-07-09T14:04:51.947355Z","shell.execute_reply":"2024-07-09T14:04:57.374445Z"},"trusted":true},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/762 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5ee5a1f2717e499891e961b27a542b48"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/353M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"bb388f6ba32b483496fbd488b9dfdf81"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"generation_config.json:   0%|          | 0.00/124 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"741eb820b1a9435182a4b97e52f4c842"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/26.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0f43ab3ec7bf43928f0d25fcb2fab27f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.json:   0%|          | 0.00/1.04M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"adb2c0a6fb5c41a0932efed921a37fa5"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"merges.txt:   0%|          | 0.00/456k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"a5c0c02ca3f44febb94831afbba927dc"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/1.36M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"fa58e402939947d8bf8e6826721138f9"}},"metadata":{}},{"name":"stderr","text":"Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=True` to explicitly truncate examples to max length. Defaulting to 'longest_first' truncation strategy. If you encode pairs of sequences (GLUE-style) with the tokenizer you can select this strategy more precisely by providing a specific strategy to `truncation`.\nSetting `pad_token_id` to `eos_token_id`:50256 for open-end generation.\n","output_type":"stream"},{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"[{'generated_text': 'In this course, we will teach you how to think of the world, the way we live and look at our different lives, how we live and'},\n {'generated_text': 'In this course, we will teach you how to read the language and how to make yourself fit into a community of interested speakers.'}]"},"metadata":{}}]},{"cell_type":"code","source":"# Mask filling\nunmasker = pipeline(\"fill-mask\")\nunmasker(\"This course will teach you all about <mask> models.\", top_k=2)","metadata":{"execution":{"iopub.status.busy":"2024-07-09T14:06:32.549327Z","iopub.execute_input":"2024-07-09T14:06:32.549963Z","iopub.status.idle":"2024-07-09T14:06:39.494248Z","shell.execute_reply.started":"2024-07-09T14:06:32.549920Z","shell.execute_reply":"2024-07-09T14:06:39.492643Z"},"trusted":true},"execution_count":8,"outputs":[{"name":"stderr","text":"No model was supplied, defaulted to distilbert/distilroberta-base and revision ec58a5b (https://huggingface.co/distilbert/distilroberta-base).\nUsing a pipeline without specifying a model name and revision in production is not recommended.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/480 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"08fb3d9ead6f44f986a288ce110ef043"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/331M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"bc5921178bc54ae893403bf795596bbf"}},"metadata":{}},{"name":"stderr","text":"Some weights of the model checkpoint at distilbert/distilroberta-base were not used when initializing RobertaForMaskedLM: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']\n- This IS expected if you are initializing RobertaForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n- This IS NOT expected if you are initializing RobertaForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/25.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5e540321a61c42b9807faeda826a6e7b"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.json:   0%|          | 0.00/899k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7a174a01026f4aa38ce78d956bb80a1f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"merges.txt:   0%|          | 0.00/456k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"db9f6e951e1e44ceb7bb3fdf52d56544"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/1.36M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"abd6d1546ee04a26924a07e15094afb4"}},"metadata":{}},{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"[{'score': 0.1961979866027832,\n  'token': 30412,\n  'token_str': ' mathematical',\n  'sequence': 'This course will teach you all about mathematical models.'},\n {'score': 0.04052741825580597,\n  'token': 38163,\n  'token_str': ' computational',\n  'sequence': 'This course will teach you all about computational models.'}]"},"metadata":{}}]},{"cell_type":"code","source":"# Named entity recognition (NER)\nner = pipeline(\"ner\", grouped_entities=True)\nner(\"My name is Niwech and I work at JP Morgan Chase in Texas.\")","metadata":{"execution":{"iopub.status.busy":"2024-07-09T14:08:24.657897Z","iopub.execute_input":"2024-07-09T14:08:24.658411Z","iopub.status.idle":"2024-07-09T14:08:33.165330Z","shell.execute_reply.started":"2024-07-09T14:08:24.658378Z","shell.execute_reply":"2024-07-09T14:08:33.163882Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stderr","text":"No model was supplied, defaulted to dbmdz/bert-large-cased-finetuned-conll03-english and revision f2482bf (https://huggingface.co/dbmdz/bert-large-cased-finetuned-conll03-english).\nUsing a pipeline without specifying a model name and revision in production is not recommended.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/998 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"463ec726ba4c45778e71c84f13c11cfa"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/1.33G [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"01fe586bf9b64a3c92bb2130b9fbc39d"}},"metadata":{}},{"name":"stderr","text":"Some weights of the model checkpoint at dbmdz/bert-large-cased-finetuned-conll03-english were not used when initializing BertForTokenClassification: ['bert.pooler.dense.bias', 'bert.pooler.dense.weight']\n- This IS expected if you are initializing BertForTokenClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n- This IS NOT expected if you are initializing BertForTokenClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/60.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e81efe1920784556a6e12b1f16e2e00f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.txt:   0%|          | 0.00/213k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4799887d7f0c4c83985f54441b6c8894"}},"metadata":{}},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/transformers/pipelines/token_classification.py:168: UserWarning: `grouped_entities` is deprecated and will be removed in version v5.0.0, defaulted to `aggregation_strategy=\"simple\"` instead.\n  warnings.warn(\n","output_type":"stream"},{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"[{'entity_group': 'PER',\n  'score': 0.9987836,\n  'word': 'Niwech',\n  'start': 11,\n  'end': 17},\n {'entity_group': 'ORG',\n  'score': 0.9985772,\n  'word': 'JP Morgan Chase',\n  'start': 32,\n  'end': 47},\n {'entity_group': 'LOC',\n  'score': 0.99954456,\n  'word': 'Texas',\n  'start': 51,\n  'end': 56}]"},"metadata":{}}]},{"cell_type":"code","source":"# Question answering\nquestion_answerer = pipeline(\"question-answering\")\nquestion_answerer(\n    question=\"Where do I work?\",\n    context=\"My name is Niwech and I work at JP Morgan Chase in Texas.\",\n)","metadata":{"execution":{"iopub.status.busy":"2024-07-09T14:10:44.826427Z","iopub.execute_input":"2024-07-09T14:10:44.828732Z","iopub.status.idle":"2024-07-09T14:10:49.047753Z","shell.execute_reply.started":"2024-07-09T14:10:44.828667Z","shell.execute_reply":"2024-07-09T14:10:49.046329Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stderr","text":"No model was supplied, defaulted to distilbert/distilbert-base-cased-distilled-squad and revision 626af31 (https://huggingface.co/distilbert/distilbert-base-cased-distilled-squad).\nUsing a pipeline without specifying a model name and revision in production is not recommended.\n/opt/conda/lib/python3.10/site-packages/huggingface_hub/file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.\n  warnings.warn(\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/473 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"be998b5e21854a598c36138956fc818f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"model.safetensors:   0%|          | 0.00/261M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"07016ca282fc47e68bf215e73695d301"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/49.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0a31e533d40145588aa02379fe3f8ea2"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.txt:   0%|          | 0.00/213k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"08380d495f364d288ff2ceb2cfc0a229"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer.json:   0%|          | 0.00/436k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"211ee64ca9eb458a8535131cf44971f7"}},"metadata":{}},{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"{'score': 0.781455397605896,\n 'start': 32,\n 'end': 47,\n 'answer': 'JP Morgan Chase'}"},"metadata":{}}]},{"cell_type":"code","source":"# Summarization\nsummarizer = pipeline(\"summarization\")\nsummarizer(\n    \"\"\"\n    Artificial Intelligence (AI) shows the potential future of the health care industry. Understanding\nthe factors that influence potential patients’ trust in incorporating AI into medicine will\nencourage not only health care providers, but also software development companies to invest in\nAI in medicine for better patient care as part of their business strategies. This descriptive study\nincluded 400 online survey responses. Half of the respondents live in the United States, while the\nother half live in Thailand. This study discovers that the quality (accuracy) of AI in medicine is\nthe most important to the vast majority of participants (80.8%). Participants’ trust in AI in\nmedicine grows as its quality (accuracy) improves. The majority of participants (67.1%) would\nlikely trust AI in diagnosis and treatment if it were the only option available to them. The cost of\nAI is the least important factor in convincing the majority of participants (48%) to trust AI in\nmedicine. The vast majority of participants (81%) thought AI doctor fees should be lower than\ntraditional doctor fees. Nearly half of participants (47%) indicated that 90% to 100% accuracy is\nthe accuracy level at which they would put their medical decisions in the hands of AI. The\nmajority of participants (67.8%) would most likely use AI doctors for nonemergency situations\nfor free in exchange for their health care data. There was a statistically significant difference\nbetween groups (the United States vs. Thailand) as determined by one-way ANOVA. Both\ngroups show a positive attitude toward AI in medicine.\n    \"\"\"\n)","metadata":{"execution":{"iopub.status.busy":"2024-07-09T14:14:32.919443Z","iopub.execute_input":"2024-07-09T14:14:32.922504Z","iopub.status.idle":"2024-07-09T14:14:54.482703Z","shell.execute_reply.started":"2024-07-09T14:14:32.922433Z","shell.execute_reply":"2024-07-09T14:14:54.481332Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stderr","text":"No model was supplied, defaulted to sshleifer/distilbart-cnn-12-6 and revision a4f8f3e (https://huggingface.co/sshleifer/distilbart-cnn-12-6).\nUsing a pipeline without specifying a model name and revision in production is not recommended.\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/1.80k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8413e2dd6b784897a8740b7848c001e4"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"pytorch_model.bin:   0%|          | 0.00/1.22G [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"00ef49df0d60471d9a6017406490db3e"}},"metadata":{}},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()\n  return self.fget.__get__(instance, owner)()\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/26.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7d976b8c8fee417abbde5a19cb9ec8d5"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.json:   0%|          | 0.00/899k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"db4ba2a1ad5b45a182fb029e3e30aaca"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"merges.txt:   0%|          | 0.00/456k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5b372aa24fed46d9ab0acacdac71fda4"}},"metadata":{}},{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"[{'summary_text': ' The majority of participants (67.1%) would likely trust AI in diagnosis and treatment if it were the only option available to them . The quality (accuracy) of AI in medicine is the most important to the vast majority (80.8%) of participants . The majority (81%) thought AI doctor fees should be lower than traditional doctor fees . Nearly half indicated that 90% to 100% accuracy is the accuracy level at which they would put their medical decisions in the hands of AI .'}]"},"metadata":{}}]},{"cell_type":"code","source":"# Translation\ntranslator = pipeline(\"translation\", model=\"Helsinki-NLP/opus-mt-fr-en\")\ntranslator(\"Ce cours est produit par Hugging Face.\")","metadata":{"execution":{"iopub.status.busy":"2024-07-09T14:16:40.849587Z","iopub.execute_input":"2024-07-09T14:16:40.850182Z","iopub.status.idle":"2024-07-09T14:16:48.491684Z","shell.execute_reply.started":"2024-07-09T14:16:40.850127Z","shell.execute_reply":"2024-07-09T14:16:48.490168Z"},"trusted":true},"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/plain":"config.json:   0%|          | 0.00/1.42k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"1c4c24e91a2945b28a73927750dd3d16"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"pytorch_model.bin:   0%|          | 0.00/301M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7862d9ca5c274dd0a6c64b563e3d382a"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"generation_config.json:   0%|          | 0.00/293 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"dab3d16c81f544838a1ffd47efa984e4"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"tokenizer_config.json:   0%|          | 0.00/42.0 [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0bbf4003e4a04d9ead27ff18676a6e1a"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"source.spm:   0%|          | 0.00/802k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"18c1c076b24a49198c63d7bcc9597ce1"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"target.spm:   0%|          | 0.00/778k [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"984bd3bbdc2848aa99a65df88241b5ea"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"vocab.json:   0%|          | 0.00/1.34M [00:00<?, ?B/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"36d52ffe629e4fad974a98bb5bf74816"}},"metadata":{}},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/transformers/models/marian/tokenization_marian.py:175: UserWarning: Recommended: pip install sacremoses.\n  warnings.warn(\"Recommended: pip install sacremoses.\")\n","output_type":"stream"},{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"[{'translation_text': 'This course is produced by Hugging Face.'}]"},"metadata":{}}]},{"cell_type":"code","source":"# Thai translation\nth_tranlator = pipeline(\"translation\", model=\"Helsinki-NLP/opus-mt-th-en\")\nth_tranlator(\"ยอดเยี่ยม! โมเดลของเราใช้งานได้เช่นเดียวกับโมเดลเริ่มต้นสำหรับไปป์ไลน์นี้\")","metadata":{"execution":{"iopub.status.busy":"2024-07-09T14:34:04.516712Z","iopub.execute_input":"2024-07-09T14:34:04.517294Z","iopub.status.idle":"2024-07-09T14:34:08.394590Z","shell.execute_reply.started":"2024-07-09T14:34:04.517256Z","shell.execute_reply":"2024-07-09T14:34:08.393277Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"[{'translation_text': 'Excellent! Our model works as well as the initial model for this pipeline.'}]"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}